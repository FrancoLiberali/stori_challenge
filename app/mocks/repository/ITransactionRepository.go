// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	models "github.com/FrancoLiberali/stori_challenge/app/models"
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// ITransactionRepository is an autogenerated mock type for the ITransactionRepository type
type ITransactionRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: db, transactions
func (_m *ITransactionRepository) Create(db *gorm.DB, transactions []models.Transaction) error {
	ret := _m.Called(db, transactions)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*gorm.DB, []models.Transaction) error); ok {
		r0 = rf(db, transactions)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewITransactionRepository creates a new instance of ITransactionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITransactionRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITransactionRepository {
	mock := &ITransactionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
